%% TestBench.m is a script to create a test bench environment for RCS

% Close, clean environment
close all; clear all; clc;

%% Use NeuroDAC Brown University to generate a Beta oscillation
deviceWriter = audioDeviceWriter;
devicesW = getAudioDevices(deviceWriter);

for j=1:length(devicesW)
    if strcmp('MCHStreamer DAC8 ',char(devicesW(j)))
        deviceName = char(devicesW(j));
        disp(['device (', deviceName, ') found! ...'])
        deviceWriter = audioDeviceWriter('Device', deviceName);
        break
    else
        if j==length(devicesW)
            disp('device not found, make sure U-DAC8 device is connected')
        end
    end
end

% Create oscillator type object
osc = audioOscillator;

% Create a time scope to visualize the variable-frequency sine wave generated by the audio oscillator.
scope = dsp.TimeScope( ...
    'SampleRate',osc.SampleRate, ...
    'TimeSpan',0.05, ...
    'YLimits',[-1.5,1.5], ...
    'TimeSpanOverrunAction','Scroll', ...
    'ShowGrid',true, ...
    'Title','Variable-Frequency Sine Wave');

% Ouput oscillator signal via scope & DAC
counter = 0;
osc.Frequency = 1;
osc.Amplitude = 1;

disp('Oscillation being delivered ...')
disp(['Frequency = ', num2str(osc.Frequency),' Hz'])
disp(['Amplitude = ', num2str(osc.Amplitude),' au'])
    
while (counter < 1e4)
    counter = counter + 1;
    sineWave = osc();
    scope(sineWave);
    deviceWriter(sineWave);
    if mod(counter,100)==0
        disp('Oscillation being delivered ...')
        osc.Frequency = osc.Frequency + 50;
        disp(['Frequency = ', num2str(osc.Frequency),' Hz'])
        osc.Amplitude = osc.Amplitude - 0.2;
        if osc.Amplitude < 0.001
            break
        disp(['Amplitude = ', num2str(osc.Amplitude),' au'])
    end
end
